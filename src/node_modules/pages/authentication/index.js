import React, {useState} from 'react';
import { Link } from 'react-router-dom';

import useFetch from 'hooks/useFetch';

const Authentication = props => {
    const isLogin = props.match.path === '/login'
    const pageTitle = isLogin ? 'Sign In' : 'Sign Up'
    const descriptionLink = isLogin ? '/register' : '/login'
    const descriptionText = isLogin ? 'Need an account?' : 'Have an account?'
    const apiUrl = isLogin ? '/users/login' : '/users'
    const [username, setUsername] = useState('')
    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    const [{isLoading, response, error}, doFetch] = useFetch(apiUrl)
    console.log("PROPS", isLogin)
    const user = isLogin ? {email, password} : {email, password, username}
    const handleSubmit = (event) => {
        event.preventDefault()
        doFetch({
            method: 'post',
            data: {
                user
            }
        })
    }

    
    return (
        <div className='auth-page'>
            <div className="container page">
                <div className="row">
                    <div className='col-md-6 offset-md-3 col-xs-12'>
                        <h1 className='text-xs-center'>{pageTitle}</h1>
                        <p className='text-xs-center'>
                            <Link to={descriptionLink}>{descriptionText}</Link>
                        </p>
                        <form onSubmit={handleSubmit}>
                            <fieldset>
                            {!isLogin && (
                                <fieldset className='form-group'>
                                    <input 
                                    type='text'
                                    value={username}
                                    onChange={e => setUsername(e.target.value)}
                                    className='form-control form-control-lg' 
                                    placeholder='Username' />
                                </fieldset>
                            )}
                                <fieldset className='form-group'>
                                    <input 
                                    type='email'
                                    value={email}
                                    onChange={e => setEmail(e.target.value)}
                                    className='form-control form-control-lg' 
                                    placeholder='Email' />
                                </fieldset>
                                <fieldset className='form-group'>
                                    <input 
                                    type='password'
                                    value={password}
                                    onChange={e => setPassword(e.target.value)}
                                    className='form-control form-control-lg' 
                                    placeholder='Password' />
                                </fieldset>
                                <button 
                                className='btn btn-lg btn-primary pull-xs-right' 
                                type='submit'
                                disabled={isLoading}
                                >
                                {pageTitle}
                                </button>
                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    )
}

export default Authentication